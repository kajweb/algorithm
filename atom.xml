<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ALGORITHM</title>
  
  <subtitle>Algorithm Learning</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-03-28T07:57:56.488Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>kajweb</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>牛牛打怪</title>
    <link href="http://example.com/2020/11/26/nndg/"/>
    <id>http://example.com/2020/11/26/nndg/</id>
    <published>2020-11-26T09:28:00.000Z</published>
    <updated>2022-03-28T07:57:56.488Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://ac.nowcoder.com/acm/contest/9246" target="_blank" rel="noopener">牛客编程巅峰赛S2第3场</a><br><a href="https://ac.nowcoder.com/acm/contest/9246/A" target="_blank" rel="noopener">题目链接</a></p></blockquote><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>牛牛在各个平台被各种传奇游戏的广告轰炸，所以他决定去玩一玩这类的游戏。这类游戏挂机就可以升级，所以牛牛每天都能变强。在第i天里，牛牛能杀死防御力小于等于i的怪物。但由于牛牛还要刷题，所以牛牛每天最多杀一只怪物。这个游戏共有n只怪物，每只怪物的防御力为DEF[i]，牛牛想知道最少要到第几天才能把这n只怪物都杀死。</p><h2 id="输入1"><a href="#输入1" class="headerlink" title="输入1"></a>输入1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2,[7,3]</span><br></pre></td></tr></table></figure><h2 id="输出1"><a href="#输出1" class="headerlink" title="输出1"></a>输出1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>牛牛可以在第3天杀死一只防御力为3的怪物，在第7天杀死一只防御力为7的怪物。所以牛牛最少能在第7天把这些怪物全杀死。</p><h2 id="输入2"><a href="#输入2" class="headerlink" title="输入2"></a>输入2</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3,[4,5,5]</span><br></pre></td></tr></table></figure><h2 id="输出2"><a href="#输出2" class="headerlink" title="输出2"></a>输出2</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure><h2 id="说明2"><a href="#说明2" class="headerlink" title="说明2"></a>说明2</h2><p>牛牛可以在第4天杀死一只防御力为4的怪物，在第5天杀死一只防御力为5的怪物，在第六天将另一只防御力为5的怪杀死。所以牛牛最少能在第6天把这些怪物全杀死。</p><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><p>对于<code>100%</code>的数据：<code>1≤n≤1e3</code>, <code>1≤DEF[i]≤1e6</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/9246&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;牛客编程巅峰赛S2第3场&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://ac.no</summary>
      
    
    
    
    <category term="牛客编程巅峰赛S2" scheme="http://example.com/categories/%E7%89%9B%E5%AE%A2%E7%BC%96%E7%A8%8B%E5%B7%85%E5%B3%B0%E8%B5%9BS2/"/>
    
    
    <category term="牛客编程巅峰赛" scheme="http://example.com/tags/%E7%89%9B%E5%AE%A2%E7%BC%96%E7%A8%8B%E5%B7%85%E5%B3%B0%E8%B5%9B/"/>
    
    <category term="牛客编程巅峰赛S2第三场" scheme="http://example.com/tags/%E7%89%9B%E5%AE%A2%E7%BC%96%E7%A8%8B%E5%B7%85%E5%B3%B0%E8%B5%9BS2%E7%AC%AC%E4%B8%89%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>Tree II</title>
    <link href="http://example.com/2020/11/20/tree2/"/>
    <id>http://example.com/2020/11/20/tree2/</id>
    <published>2020-11-20T14:08:00.000Z</published>
    <updated>2022-03-28T07:57:56.488Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://ac.nowcoder.com/acm/contest/9223" target="_blank" rel="noopener">牛客编程巅峰赛S2第2场</a><br><a href="https://ac.nowcoder.com/acm/contest/9223/C" target="_blank" rel="noopener">题目链接</a></p></blockquote><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>系统中有一棵n个点的完全k叉树，现给出它的BFS层序遍历序列ai（即从根节点开始，每一层从左向右遍历），请你还原这棵树，并返回加密后的答案。<br>答案加密方法：所有边两个端点异或的和，即<br><img src="/images/pasted-1.png" alt="upload successful">，其中<br><img src="/images/pasted-2.png" alt="upload successful">为一条树上的边。</p><p>下面给出完全二叉树的定义：若设二叉树的深度为k，除第 k 层外，其它各层 (1～k-1) 的结点数都达到最大个数，第k层所有的结点都<strong>连续集中在最左边</strong>。<br><strong>请你根据这个定义进行适度推广，得到完全k叉树的含义。</strong></p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2,[1,2,3,4,5]</span><br></pre></td></tr></table></figure><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">18</span><br></pre></td></tr></table></figure><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>树边为(1, 2), (1, 3), (2, 4), (2, 5)，加密过程为(1^2)+(1^3)+(2^4)+(2^5)，答案为18。</p><p>样例1构成的完全二叉树为：<br><img src="https://uploadfiles.nowcoder.com/images/20200527/329682_1590557746727_4A47A0DB6E60853DEDFCFDF08A5CA249" alt=""></p><h2 id="输入2"><a href="#输入2" class="headerlink" title="输入2"></a>输入2</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3,[1,2,3,4,5]</span><br></pre></td></tr></table></figure><h2 id="输出2"><a href="#输出2" class="headerlink" title="输出2"></a>输出2</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">17</span><br></pre></td></tr></table></figure><h2 id="说明2"><a href="#说明2" class="headerlink" title="说明2"></a>说明2</h2><p>树边为(1, 2), (1, 3), (1, 4), (2, 5)，加密过程为(1^2)+(1^3)+(1^4)+(2^5)，答案为17。</p><p>样例2构成的完全三叉树为：</p><p><img src="https://uploadfiles.nowcoder.com/images/20200528/329682_1590638604746_10FB15C77258A991B0028080A64FB42D" alt=""></p><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><p><img src="/images/pasted-3.png" alt="upload successful"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param </span>k int整型 表示完全k叉树的叉数k</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param </span>a int整型一维数组 表示这棵完全k叉树的Bfs遍历序列的结点编号</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return </span>long长整型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tree2</span>(<span class="params"> k ,  a </span>) </span>&#123;</span><br><span class="line">    <span class="comment">// write code here</span></span><br><span class="line">    <span class="keyword">let</span> arr = a.shift( <span class="number">1</span> );</span><br><span class="line">    <span class="keyword">let</span> maxLen = k;</span><br><span class="line">    <span class="keyword">while</span>( a.length )&#123;</span><br><span class="line">        <span class="keyword">if</span>( a.length&gt;maxLen )&#123;</span><br><span class="line">            arr.push( a.splice( <span class="number">0</span>, maxLen ) );</span><br><span class="line">            k = k * k;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            arr.push( a.splice() );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> sum = <span class="number">0</span>;</span><br><span class="line">    arr.map(<span class="function">(<span class="params">e,i</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>( i==<span class="number">0</span> )</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        e.map(<span class="function">(<span class="params">item,itemIndex</span>)=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">let</span> p = </span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    tree2 : tree2</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/9223&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;牛客编程巅峰赛S2第2场&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://ac.no</summary>
      
    
    
    
    <category term="牛客编程巅峰赛S2" scheme="http://example.com/categories/%E7%89%9B%E5%AE%A2%E7%BC%96%E7%A8%8B%E5%B7%85%E5%B3%B0%E8%B5%9BS2/"/>
    
    
    <category term="牛客编程巅峰赛" scheme="http://example.com/tags/%E7%89%9B%E5%AE%A2%E7%BC%96%E7%A8%8B%E5%B7%85%E5%B3%B0%E8%B5%9B/"/>
    
    <category term="牛客编程巅峰赛S2第二场" scheme="http://example.com/tags/%E7%89%9B%E5%AE%A2%E7%BC%96%E7%A8%8B%E5%B7%85%E5%B3%B0%E8%B5%9BS2%E7%AC%AC%E4%BA%8C%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>牛牛切木棒</title>
    <link href="http://example.com/2020/11/20/nnqmb/"/>
    <id>http://example.com/2020/11/20/nnqmb/</id>
    <published>2020-11-20T14:06:00.000Z</published>
    <updated>2022-03-28T07:57:56.488Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://ac.nowcoder.com/acm/contest/9223" target="_blank" rel="noopener">牛客编程巅峰赛S2第2场</a><br><a href="https://ac.nowcoder.com/acm/contest/9223/B" target="_blank" rel="noopener">题目链接</a></p></blockquote><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>牛牛有一根长度为a(<code>3 \leq a \leq 1e18</code>)(3≤a≤1e18)的木棒，现在牛牛想将木棒分成一些段（每段木棒长度必须为整数），使得分隔后的木棍中，任意三段都不能构成三角形，牛牛想知道木棒最多被分成几段呢？</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可以分成1 1 3三段</span><br></pre></td></tr></table></figure><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param </span>a long长整型 木棒的长度</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return </span>int整型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">stick</span>(<span class="params"> a </span>) </span>&#123;</span><br><span class="line">    <span class="comment">// write code here</span></span><br><span class="line">    <span class="keyword">if</span>( a&lt;<span class="number">5</span> )</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> s = [<span class="number">1</span>,<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">while</span>( <span class="literal">true</span> )&#123;</span><br><span class="line">        <span class="keyword">let</span> next = s[s.length<span class="number">-1</span>] + s[s.length<span class="number">-2</span>];</span><br><span class="line">        <span class="keyword">if</span>( a&gt;next )&#123;</span><br><span class="line">            s.push( next )</span><br><span class="line">            a -= next;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s.length;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    stick : stick</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/9223&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;牛客编程巅峰赛S2第2场&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://ac.no</summary>
      
    
    
    
    <category term="牛客编程巅峰赛S2" scheme="http://example.com/categories/%E7%89%9B%E5%AE%A2%E7%BC%96%E7%A8%8B%E5%B7%85%E5%B3%B0%E8%B5%9BS2/"/>
    
    
    <category term="牛客编程巅峰赛" scheme="http://example.com/tags/%E7%89%9B%E5%AE%A2%E7%BC%96%E7%A8%8B%E5%B7%85%E5%B3%B0%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>热心的牛牛</title>
    <link href="http://example.com/2020/11/20/rxdnn/"/>
    <id>http://example.com/2020/11/20/rxdnn/</id>
    <published>2020-11-20T14:00:00.000Z</published>
    <updated>2022-03-28T07:57:56.488Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://ac.nowcoder.com/acm/contest/9223" target="_blank" rel="noopener">牛客编程巅峰赛S2第2场</a><br><a href="https://ac.nowcoder.com/acm/contest/9223/A" target="_blank" rel="noopener">题目链接</a></p></blockquote><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>牛牛是个非常热心的人，所以他有很多的朋友。这一天牛牛跟他的n个朋友一起出去玩，在出门前牛牛的妈妈给了牛牛k块糖果，牛牛决定把这些糖果的一部分分享给他的朋友们。由于牛牛非常热心，所以他希望他的每一个朋友分到的糖果数量都比牛牛要多（严格意义的多，不能相等）。牛牛想知道他最多能吃到多少糖果？</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2,10</span><br></pre></td></tr></table></figure><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>牛牛可以分给他的两个朋友各4个糖果，这样他能吃到2个糖果，这样能保证他的每个朋友的糖果数都比他多，不存在牛牛能吃到3个或者以上糖果的情况</p><h2 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3,11</span><br></pre></td></tr></table></figure><h2 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h2 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h2><p>牛牛可以分给他的3个朋友各3个糖果，这样他能吃到2个糖果，这样能保证他的每个朋友的糖果数都比他多，不存在牛牛能吃到3个或者以上糖果的情况</p><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><p>对于百分之30的数据：<code>1\leq n\leq 100</code>,<code>n\leq k\leq 1001≤n≤100,n≤k≤100</code></p><p>对于百分之100的数据：1\leq n\leq 1e18<code>,</code>n\leq k\leq 1e181≤n≤1e18,n≤k≤1e18<code></code><br>函数有两个long long型参数</p><p>第一个参数代表题目中的n</p><p>第二个参数代表题目中的k</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可</span></span><br><span class="line"><span class="comment">     * 返回牛牛能吃到的最多糖果数</span></span><br><span class="line"><span class="comment">     * @param n long长整型 </span></span><br><span class="line"><span class="comment">     * @param k long长整型 </span></span><br><span class="line"><span class="comment">     * @return long长整型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">Maximumcandies</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> n, <span class="keyword">long</span> <span class="keyword">long</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// write code here</span></span><br><span class="line">        <span class="keyword">return</span> (k-n) / (n+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="备注-1"><a href="#备注-1" class="headerlink" title="备注"></a>备注</h2><p>这题使用JS实现的话，会因为JS的<code>int</code>的<code>Number.MAX_SAFE_INTEGER</code>为<code>9007199254740991</code>（<code>Math.pow(2,53)-1</code>）。<br>需要使用<code>BigInt</code>，或大数处理类。<br>但是在实际评测中，使用BigInt只能<code>AC 90%</code>。 具体原因不详。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可</span></span><br><span class="line"><span class="comment"> * 返回牛牛能吃到的最多糖果数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param </span>n long长整型 </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param </span>k long长整型 </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return </span>long长整型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Maximumcandies</span>(<span class="params"> n ,  k </span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">parseInt</span>((BigInt(k)-BigInt(n)) / (BigInt(n)+<span class="number">1n</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    Maximumcandies : Maximumcandies</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/9223&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;牛客编程巅峰赛S2第2场&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://ac.no</summary>
      
    
    
    
    <category term="牛客编程巅峰赛S2" scheme="http://example.com/categories/%E7%89%9B%E5%AE%A2%E7%BC%96%E7%A8%8B%E5%B7%85%E5%B3%B0%E8%B5%9BS2/"/>
    
    
    <category term="牛客编程巅峰赛" scheme="http://example.com/tags/%E7%89%9B%E5%AE%A2%E7%BC%96%E7%A8%8B%E5%B7%85%E5%B3%B0%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>字符串匹配问题</title>
    <link href="http://example.com/2020/11/20/zfcppwt/"/>
    <id>http://example.com/2020/11/20/zfcppwt/</id>
    <published>2020-11-20T06:43:00.000Z</published>
    <updated>2022-03-28T07:57:56.488Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>2020-11-20 明略科技集团 2021 校招笔试-前端类 B卷 编程题第二题</p></blockquote><p><a href="https://www.nowcoder.com/questionTerminal/7ab95c2bbfc941a89c13c78128914e14" target="_blank" rel="noopener">牛客网原题：CD136</a></p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>对于字符串str，其中绝对不含有字符<code>.</code>和<code>*</code>。再给定字符串exp，其中可以含有<code>.</code>或<code>`*</code>，<code>*</code>字符不能是exp的首字符，并且任意两个<code>*</code>字符不相邻。exp中的<code>.</code>代表任何一个字符，exp中的<code>*</code>表示<code>*</code>的前一个字符可以有0个或者多个。请写一个函数，判断str是否能被exp匹配(注意：输入的数据不保证合法，但只含小写字母和<code>.</code>和<code>*</code>)。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;abc&quot;, &quot;abc&quot;</span><br></pre></td></tr></table></figure><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">true</span><br></pre></td></tr></table></figure><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1≤|str|, |exp|≤300</span><br></pre></td></tr></table></figure><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">canMatch</span>(<span class="params"> str, exp </span>)</span>&#123;</span><br><span class="line"><span class="comment">// 异常筛选</span></span><br><span class="line"><span class="keyword">if</span>( str.indexOf(<span class="string">"*"</span>) != <span class="number">-1</span> || str.indexOf(<span class="string">"*"</span>) != <span class="number">-1</span> || exp.indexOf(<span class="string">"*"</span>) == <span class="number">0</span> || exp.indexOf(<span class="string">"**"</span>) != <span class="number">-1</span> )</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">while</span>( str.length &amp;&amp; exp.length )&#123;</span><br><span class="line"><span class="keyword">let</span> currExp = exp[<span class="number">0</span>];<span class="comment">// 当前匹配的字符（首个）</span></span><br><span class="line"><span class="keyword">let</span> nextIsX  = <span class="literal">false</span>;<span class="comment">// 记录下一个是否为*</span></span><br><span class="line"><span class="keyword">if</span>( exp.length&gt;<span class="number">1</span> &amp;&amp; exp[<span class="number">1</span>] == <span class="string">"*"</span> )</span><br><span class="line">nextIsX = <span class="literal">true</span>;</span><br><span class="line"><span class="comment">// 将.重新定义为字符串首个字符</span></span><br><span class="line"><span class="keyword">if</span>( currExp == <span class="string">'.'</span> )</span><br><span class="line">currExp = str[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">if</span>( nextIsX )&#123;</span><br><span class="line"><span class="comment">// 如果接下来带星号，首先删除字符串前面相同的值，然后删除exp前面相同的值/*</span></span><br><span class="line"><span class="keyword">while</span>( str[<span class="number">0</span>] == currExp )&#123;</span><br><span class="line">str=str.substr( <span class="number">1</span> );</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>( exp[<span class="number">0</span>] == currExp || exp[<span class="number">0</span>] == <span class="string">"*"</span> )&#123;</span><br><span class="line">exp=exp.substr( <span class="number">1</span> );</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>( currExp == str[<span class="number">0</span>] )&#123;</span><br><span class="line"><span class="comment">// 如果只是单字符，且不带exp。直接删除首个字符</span></span><br><span class="line">str=str.substr( <span class="number">1</span> );</span><br><span class="line">exp=exp.substr( <span class="number">1</span> );</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 如果第一个字符不相同，且第二个字符不是*</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> str.length &amp;&amp; exp.length ? <span class="literal">false</span> : <span class="literal">true</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log( canMatch( <span class="string">"aaaabc"</span>, <span class="string">"a*abc"</span> ) )</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;2020-11-20 明略科技集团 2021 校招笔试-前端类 B卷 编程题第二题&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.nowcoder.com/questionTerminal/7ab95c2bbf</summary>
      
    
    
    
    <category term="js" scheme="http://example.com/categories/js/"/>
    
    
    <category term="js" scheme="http://example.com/tags/js/"/>
    
    <category term="明略科技" scheme="http://example.com/tags/%E6%98%8E%E7%95%A5%E7%A7%91%E6%8A%80/"/>
    
  </entry>
  
  <entry>
    <title>今年的第几天</title>
    <link href="http://example.com/2020/11/20/jnddjt/"/>
    <id>http://example.com/2020/11/20/jnddjt/</id>
    <published>2020-11-20T06:37:00.000Z</published>
    <updated>2022-03-28T07:57:56.488Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>2020-11-20 明略科技集团 2021 校招笔试-前端类 B卷 编程题第一题</p></blockquote><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>输入年、月、日，计算该天是本年的第几天。</p><h2 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述"></a>输入描述</h2><p>包括三个整数年（<code>1≤Y≤3000</code>）、月（<code>1≤M≤12</code>）、日（<code>1≤D≤31</code>）  </p><h2 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述"></a>输出描述</h2><p>输入可能有多组测试数据，对于每一组测试数据，<br>输出一个整数，代表Input中的年、月、日对应本年的第几天。  </p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1990 9 20</span><br><span class="line">2000 5 1</span><br></pre></td></tr></table></figure><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">263</span><br><span class="line">122</span><br></pre></td></tr></table></figure><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(line=readline())&#123;</span><br><span class="line"><span class="keyword">let</span> [years, month, day] = line.split(<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">let</span> dateTo = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">`<span class="subst">$&#123;years&#125;</span>-<span class="subst">$&#123;month&#125;</span>-<span class="subst">$&#123;day&#125;</span>`</span>);</span><br><span class="line"><span class="keyword">let</span> dateForm = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">`<span class="subst">$&#123;years&#125;</span>-1-1`</span>);</span><br><span class="line"><span class="keyword">let</span> dateDiff = (dateTo-dateForm) / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> / <span class="number">24</span> + <span class="number">1</span>;</span><br><span class="line">print( dateDiff )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;2020-11-20 明略科技集团 2021 校招笔试-前端类 B卷 编程题第一题&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/</summary>
      
    
    
    
    <category term="js" scheme="http://example.com/categories/js/"/>
    
    
    <category term="js" scheme="http://example.com/tags/js/"/>
    
    <category term="明略科技" scheme="http://example.com/tags/%E6%98%8E%E7%95%A5%E7%A7%91%E6%8A%80/"/>
    
  </entry>
  
  <entry>
    <title>实现32进制加法计数器</title>
    <link href="http://example.com/2020/11/18/plus32/"/>
    <id>http://example.com/2020/11/18/plus32/</id>
    <published>2020-11-18T05:18:00.000Z</published>
    <updated>2022-03-28T07:57:56.488Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>32进制数相加</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// fromCharCode() 可接受一个指定的 Unicode 值，然后返回一个字符串</span></span><br><span class="line"><span class="comment">// charCodeAt() 方法可返回指定位置的字符的 Unicode 编码。这个返回值是 0 - 65535 之间的整数。</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hexPlus36</span>(<span class="params"> string1, string2 </span>)</span>&#123;</span><br><span class="line"><span class="keyword">let</span> currentIndex = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">let</span> start = <span class="string">"0"</span>;</span><br><span class="line"><span class="keyword">let</span> end = <span class="string">"Z"</span>;</span><br><span class="line"><span class="keyword">let</span> isAdd = <span class="literal">false</span>;<span class="comment">// 进位标志符</span></span><br><span class="line"><span class="keyword">let</span> startCharCode = start.charCodeAt();</span><br><span class="line"><span class="keyword">let</span> endCharCode = end.charCodeAt();</span><br><span class="line"><span class="keyword">let</span> sum = [];<span class="comment">//总和</span></span><br><span class="line"><span class="keyword">let</span> Lenstring1 = string1.length;</span><br><span class="line"><span class="keyword">let</span> Lenstring2 = string2.length;</span><br><span class="line"><span class="keyword">while</span>( Lenstring1&gt;currentIndex ||  Lenstring2&gt;currentIndex )&#123;</span><br><span class="line"><span class="comment">// 对两位进行预处理，屏蔽[9-a]中间的字符</span></span><br><span class="line"><span class="keyword">let</span> addA = startCharCode;</span><br><span class="line"><span class="keyword">if</span>( Lenstring1&gt;currentIndex )&#123;</span><br><span class="line"><span class="keyword">let</span> currentCharCode = string1.charCodeAt(Lenstring1-currentIndex<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">if</span>( currentCharCode &gt;= startCharCode+<span class="number">9</span> )&#123;</span><br><span class="line">addA = currentCharCode - <span class="string">"a"</span>.charCodeAt() + startCharCode + <span class="number">10</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">addA = currentCharCode;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> addB = startCharCode;</span><br><span class="line"><span class="keyword">if</span>( Lenstring2&gt;currentIndex )&#123;</span><br><span class="line"><span class="keyword">let</span> currentCharCode = string2.charCodeAt(Lenstring2-currentIndex<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">if</span>( currentCharCode &gt;= startCharCode+<span class="number">9</span> )&#123;</span><br><span class="line">addB = currentCharCode - <span class="string">"a"</span>.charCodeAt() + startCharCode + <span class="number">10</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">addB = currentCharCode;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 进行加法</span></span><br><span class="line"><span class="keyword">let</span> sumCharCode = (isAdd&amp;&amp;<span class="number">1</span>) + addA + addB - startCharCode;</span><br><span class="line"><span class="keyword">if</span>( sumCharCode &gt;= startCharCode + <span class="number">36</span> )&#123;</span><br><span class="line">sumCharCode -= <span class="number">36</span>;</span><br><span class="line">isAdd = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 回退屏蔽</span></span><br><span class="line"><span class="keyword">if</span>( <span class="built_in">parseInt</span>(sumCharCode) &gt; startCharCode+<span class="number">9</span> )&#123;</span><br><span class="line">sumCharCode +=  <span class="string">"a"</span>.charCodeAt() - startCharCode - <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line">sum.unshift( <span class="built_in">String</span>.fromCharCode(sumCharCode) );</span><br><span class="line">currentIndex++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>( isAdd )</span><br><span class="line">sum.unshift( <span class="built_in">String</span>.fromCharCode(startCharCode+<span class="number">1</span>) );</span><br><span class="line"><span class="keyword">return</span> sum.join(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> result = hexPlus36(<span class="string">"1"</span>,<span class="string">"1"</span>);</span><br><span class="line"><span class="built_in">console</span>.log( result );</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;32进制数相加&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;</summary>
      
    
    
    
    <category term="js" scheme="http://example.com/categories/js/"/>
    
    
    <category term="js" scheme="http://example.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>十进制二进制</title>
    <link href="http://example.com/2020/11/17/sjzzejz/"/>
    <id>http://example.com/2020/11/17/sjzzejz/</id>
    <published>2020-11-17T19:35:00.000Z</published>
    <updated>2022-03-28T07:57:56.488Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>拟将任意给定的正整数n转换成对应的二进制数的过程：对于输入的任意正整数n，输出若干行“shang:<em> yu:</em>”的形式，表示其转换过程。</p><h2 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述"></a>输入描述</h2><p>输入正整数n。</p><h2 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述"></a>输出描述</h2><p>输出其转为二进制的过程(具体见样例)。</p><h2 id="示例输入"><a href="#示例输入" class="headerlink" title="示例输入"></a>示例输入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">13</span><br></pre></td></tr></table></figure><h2 id="示例输出"><a href="#示例输出" class="headerlink" title="示例输出"></a>示例输出</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">shang:6 yu:1</span><br><span class="line">shang:3 yu:0</span><br><span class="line">shang:1 yu:1</span><br><span class="line">shang:0 yu:1</span><br></pre></td></tr></table></figure><h2 id="HINT"><a href="#HINT" class="headerlink" title="HINT"></a>HINT</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>( <span class="string">"%d"</span>, &amp;n );</span><br><span class="line">    <span class="keyword">while</span>( n!=<span class="number">1</span> )&#123;</span><br><span class="line">        <span class="keyword">int</span> mod = n % <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>( mod == <span class="number">1</span> )&#123;</span><br><span class="line">            n = n<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        n /= <span class="number">2</span>;</span><br><span class="line">        <span class="built_in">printf</span>( <span class="string">"shang:%d yu:%d\n"</span>, n, mod );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>( <span class="string">"shang:0 yu:1\n"</span> );</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://ac.nowcoder.com/acm/problem/15482" target="_blank" rel="noopener">题目链接</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;拟将任意给定的正整数n转换成对应的二进制数的过程：对于输入的任意正整数n，输出若干行“shang:&lt;em&gt; yu:&lt;/em&gt;</summary>
      
    
    
    
    <category term="C" scheme="http://example.com/categories/C/"/>
    
    
    <category term="C" scheme="http://example.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>计算逻辑表达式</title>
    <link href="http://example.com/2020/11/17/jsljbds/"/>
    <id>http://example.com/2020/11/17/jsljbds/</id>
    <published>2020-11-17T19:16:00.000Z</published>
    <updated>2022-03-28T07:57:56.488Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计算逻辑表达式"><a href="#计算逻辑表达式" class="headerlink" title="计算逻辑表达式"></a>计算逻辑表达式</h1><p>计算逻辑表达式的值（优先级顺序：<code>()</code>&gt;<code>!</code>&gt;<code>&amp;&amp;</code>&gt;<code>||</code>）</p><h2 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述"></a>输入描述</h2><p>请输入逻辑表达式，表达式由以下字符组成：<code>T</code>、<code>F</code>、<code>&amp;&amp;</code>、<code>||</code>、<code>!</code>、<code>(</code>、<code>)</code>、<code> </code>。  </p><blockquote><p><code>T</code>:表示布尔的<code>true</code><br><code>F</code>:表示布尔的<code>false</code></p></blockquote><h2 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述"></a>输出描述</h2><p>返回逻辑表达式的结果，油校的结果包括<code>T</code>、<code>F</code>、<code>E</code><br><code>T</code>：表示逻辑表达式的结果为<code>true</code><br><code>F</code>：表示逻辑表达式的结果为<code>false</code><br><code>E</code>：表示逻辑表达式不正确，不能计算出结果  </p><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">T || F &amp;&amp; F || F  </span><br><span class="line">! F || T &amp;&amp; T</span><br><span class="line">T &amp;&amp; F</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">T</span><br><span class="line">T</span><br><span class="line">F</span><br></pre></td></tr></table></figure><h2 id="HINT"><a href="#HINT" class="headerlink" title="HINT"></a>HINT</h2><p>![upload successful](/images/pasted-0.png</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><blockquote><p>未测试</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">dealNull</span><span class="params">( <span class="built_in">string</span> &amp;str )</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> finder;</span><br><span class="line"><span class="keyword">while</span>( <span class="literal">true</span> )&#123;</span><br><span class="line"><span class="comment">// 处理空格</span></span><br><span class="line">finder = str.<span class="built_in">find</span>(<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>( finder == <span class="number">-1</span> )&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">str.erase( finder, <span class="number">1</span> );</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">deal</span><span class="params">( <span class="built_in">string</span> &amp;str )</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> isError = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> finder;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理括号</span></span><br><span class="line"><span class="keyword">int</span> lk = str.<span class="built_in">find</span>(<span class="string">"("</span>);</span><br><span class="line"><span class="keyword">int</span> rk =str.rfind(<span class="string">")"</span>);</span><br><span class="line"><span class="keyword">if</span>( (lk!=<span class="number">-1</span>) <span class="keyword">xor</span> (rk!=<span class="number">-1</span>) )&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"E"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>( (lk!=<span class="number">-1</span>) ) &#123;</span><br><span class="line">str = str.replace( lk, rk-lk+<span class="number">1</span>, deal(((<span class="built_in">string</span>)<span class="string">""</span>).assign(str,lk+<span class="number">1</span>,rk-lk<span class="number">-1</span>)) );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>( <span class="literal">true</span> )&#123;</span><br><span class="line">finder = str.<span class="built_in">find</span>(<span class="string">"!"</span>);</span><br><span class="line"><span class="keyword">if</span>( finder == <span class="number">-1</span> )&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 处理！</span></span><br><span class="line"><span class="keyword">switch</span>( str[finder+<span class="number">1</span>] )&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'T'</span>:</span><br><span class="line">str[finder+<span class="number">1</span>] = <span class="string">'F'</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'F'</span>:</span><br><span class="line">str[finder+<span class="number">1</span>] = <span class="string">'T'</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'!'</span>:</span><br><span class="line">str.erase( finder+<span class="number">1</span>, <span class="number">1</span> );</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">isError = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">str.erase( finder, <span class="number">1</span> );</span><br><span class="line"><span class="keyword">if</span>( isError ) <span class="keyword">return</span> <span class="string">"E"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>( <span class="literal">true</span> )&#123;</span><br><span class="line">finder = str.<span class="built_in">find</span>(<span class="string">"&amp;&amp;"</span>);</span><br><span class="line"><span class="keyword">if</span>( finder == <span class="number">-1</span> )&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>( finder&lt;<span class="number">0</span> || finder==(<span class="keyword">int</span>)str.length()<span class="number">-1</span> ) &#123;</span><br><span class="line">isError = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span>( str[finder<span class="number">-1</span>] == <span class="string">'T'</span> &amp;&amp; str[finder+<span class="number">2</span>] == <span class="string">'T'</span> )&#123;</span><br><span class="line">str[finder<span class="number">-1</span>] = <span class="string">'T'</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>( </span><br><span class="line">(str[finder<span class="number">-1</span>]==<span class="string">'F'</span>||str[finder<span class="number">-1</span>]==<span class="string">'T'</span>) &amp;&amp;</span><br><span class="line">(str[finder+<span class="number">2</span>]==<span class="string">'T'</span>||str[finder+<span class="number">2</span>]==<span class="string">'F'</span>)</span><br><span class="line">)&#123;</span><br><span class="line">str[finder<span class="number">-1</span>] = <span class="string">'F'</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">isError = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">str.erase( finder, <span class="number">3</span> );</span><br><span class="line"><span class="keyword">if</span>( isError ) <span class="keyword">return</span> <span class="string">"E"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>( <span class="literal">true</span> )&#123;</span><br><span class="line">finder = str.<span class="built_in">find</span>(<span class="string">"||"</span>);</span><br><span class="line"><span class="keyword">if</span>( finder == <span class="number">-1</span> )&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>( finder&lt;<span class="number">0</span> || finder==(<span class="keyword">int</span>)str.length()<span class="number">-1</span> ) &#123;</span><br><span class="line">isError = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span>( (str[finder<span class="number">-1</span>]==<span class="string">'T'</span>||str[finder<span class="number">-1</span>]==<span class="string">'F'</span>) &amp;&amp; (str[finder+<span class="number">2</span>]!=<span class="string">'T'</span>||str[finder+<span class="number">2</span>]!=<span class="string">'F'</span>) )&#123;</span><br><span class="line"><span class="keyword">if</span>( </span><br><span class="line">(str[finder<span class="number">-1</span>]==<span class="string">'T'</span>&amp;&amp;str[finder+<span class="number">2</span>]==<span class="string">'F'</span>) || </span><br><span class="line">(str[finder<span class="number">-1</span>]==<span class="string">'F'</span> &amp;&amp; str[finder+<span class="number">2</span>]==<span class="string">'T'</span>) || </span><br><span class="line">(str[finder<span class="number">-1</span>]==<span class="string">'T'</span> &amp;&amp; str[finder+<span class="number">2</span>]==<span class="string">'T'</span>)</span><br><span class="line">)&#123;</span><br><span class="line">str[finder<span class="number">-1</span>] = <span class="string">'T'</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">str[finder<span class="number">-1</span>] = <span class="string">'F'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">isError = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">str.erase( finder, <span class="number">3</span> );</span><br><span class="line"><span class="keyword">if</span>( isError ) <span class="keyword">return</span> <span class="string">"E"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>( isError )&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"E"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">dealString</span><span class="params">( <span class="built_in">string</span> &amp;str )</span></span>&#123;</span><br><span class="line">str = dealNull( str );</span><br><span class="line">str = deal( str );</span><br><span class="line"><span class="keyword">return</span> str==<span class="string">"E"</span>||str==<span class="string">"F"</span>||str==<span class="string">"T"</span>?str:<span class="string">"E"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">string</span> str;</span><br><span class="line">getline( <span class="built_in">cin</span>, str );</span><br><span class="line"><span class="built_in">string</span> sb = dealString(str);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;sb&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;计算逻辑表达式&quot;&gt;&lt;a href=&quot;#计算逻辑表达式&quot; class=&quot;headerlink&quot; title=&quot;计算逻辑表达式&quot;&gt;&lt;/a&gt;计算逻辑表达式&lt;/h1&gt;&lt;p&gt;计算逻辑表达式的值（优先级顺序：&lt;code&gt;()&lt;/code&gt;&amp;gt;&lt;code&gt;!&lt;/code&gt;&amp;</summary>
      
    
    
    
    <category term="C++" scheme="http://example.com/categories/C/"/>
    
    
    <category term="携程" scheme="http://example.com/tags/%E6%90%BA%E7%A8%8B/"/>
    
    <category term="C++" scheme="http://example.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>[js]数字转字符串千分位</title>
    <link href="http://example.com/2020/11/03/Digital-Turn-Thousands/"/>
    <id>http://example.com/2020/11/03/Digital-Turn-Thousands/</id>
    <published>2020-11-03T20:00:00.000Z</published>
    <updated>2022-03-28T07:57:56.488Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数字转字符串千分位</span><br></pre></td></tr></table></figure><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1000000.01</span><br></pre></td></tr></table></figure><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1,000,000.01</span><br></pre></td></tr></table></figure><h2 id="回答"><a href="#回答" class="headerlink" title="回答"></a>回答</h2><h3 id="回答1"><a href="#回答1" class="headerlink" title="回答1"></a>回答1</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"> _num </span>)</span>&#123;</span><br><span class="line">    _str = _num.toString();</span><br><span class="line">    <span class="keyword">let</span> _arr = _str.split(<span class="string">"."</span>);</span><br><span class="line">    <span class="keyword">let</span> _newStr = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>( <span class="keyword">let</span> i=_arr[<span class="number">0</span>].length<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i-- )&#123;</span><br><span class="line">        <span class="keyword">if</span>( t==<span class="number">2</span> )&#123;</span><br><span class="line">            _newStr = <span class="string">`,<span class="subst">$&#123;_arr[<span class="number">0</span>][i]&#125;</span><span class="subst">$&#123;_newStr&#125;</span>`</span>;</span><br><span class="line">            t = <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            _newStr = <span class="string">`<span class="subst">$&#123;_arr[<span class="number">0</span>][i]&#125;</span><span class="subst">$&#123;_newStr&#125;</span>`</span>;</span><br><span class="line">            t++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 处理前置的“ , ”</span></span><br><span class="line">    _newStr = _newStr.replace( <span class="regexp">/^,?(.*?),?$/g</span>, <span class="string">"$1"</span> );</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 拼接整数部分</span></span><br><span class="line">    <span class="keyword">if</span>( _arr[<span class="number">1</span>] )&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;_newStr&#125;</span>.<span class="subst">$&#123;_arr[<span class="number">1</span>]&#125;</span>`</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;_newStr&#125;</span>`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log( a( <span class="number">1000000.01</span> ) )</span><br></pre></td></tr></table></figure><h3 id="回答2"><a href="#回答2" class="headerlink" title="回答2"></a>回答2</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params"> _num </span>)</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> _num.toString().replace( <span class="regexp">/\d&#123;1,3&#125;(?=(\d&#123;3&#125;)+)(?=.\d*)/g</span>, <span class="string">"$&amp;,"</span> )</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log( b( <span class="number">1000000.01</span> ) )</span><br></pre></td></tr></table></figure><h3 id="回答3"><a href="#回答3" class="headerlink" title="回答3"></a>回答3</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params"> _num </span>)</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> _num.toLocaleString()</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log( c( <span class="number">1000000.01</span> ) )</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span </summary>
      
    
    
    
    <category term="js" scheme="http://example.com/categories/js/"/>
    
    
    <category term="js" scheme="http://example.com/tags/js/"/>
    
    <category term="元戎启行" scheme="http://example.com/tags/%E5%85%83%E6%88%8E%E5%90%AF%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>[js]判断a是是否为b的子数组</title>
    <link href="http://example.com/2020/11/03/subarray-A-B/"/>
    <id>http://example.com/2020/11/03/subarray-A-B/</id>
    <published>2020-11-03T19:52:00.000Z</published>
    <updated>2022-03-28T07:57:56.488Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">判断a是是否为b的子数组</span><br></pre></td></tr></table></figure><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">遍历数组a，判断每个元素是否在b中出现。  </span><br><span class="line">如果数组a中存在一个元素不在b数组中，则数组a不是数组b的子数组。</span><br></pre></td></tr></table></figure><h2 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a = [<span class="number">2</span>, <span class="number">3</span>, <span class="number">6</span>];</span><br><span class="line"><span class="keyword">const</span> b = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isSubset</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> _isSubset = <span class="literal">true</span>;</span><br><span class="line">    a.map(<span class="function"><span class="params">e</span> =&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (b.indexOf(e) == <span class="number">-1</span>) &#123;</span><br><span class="line">            _isSubset = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="keyword">return</span> _isSubset;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(isSubset(a, b))</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span </summary>
      
    
    
    
    <category term="js" scheme="http://example.com/categories/js/"/>
    
    
    <category term="js" scheme="http://example.com/tags/js/"/>
    
    <category term="元戎启行" scheme="http://example.com/tags/%E5%85%83%E6%88%8E%E5%90%AF%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>0交换排序</title>
    <link href="http://example.com/2020/11/01/0/"/>
    <id>http://example.com/2020/11/01/0/</id>
    <published>2020-11-01T08:27:00.000Z</published>
    <updated>2022-03-28T07:57:56.488Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">长度为n的数组乱序存放着0至n-1. 现在只能进行0与其他数的交换，完成以下函数。</span><br></pre></td></tr></table></figure><h2 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 交换数组里n和0的位置</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array</span></span><br><span class="line"><span class="comment">     *      数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> len</span></span><br><span class="line"><span class="comment">     *      数组长度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> n</span></span><br><span class="line"><span class="comment">     *      和0交换的数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// 不要修改以下函数内容</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">swapWithZero</span><span class="params">(<span class="keyword">int</span>[] array, <span class="keyword">int</span> len, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        Main.SwapWithZero(array, len, n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 不要修改以上函数内容</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过调用swapWithZero方法来排</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array</span></span><br><span class="line"><span class="comment">     *      存储有[0,n)的数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> len</span></span><br><span class="line"><span class="comment">     *      数组长度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span>[] array, <span class="keyword">int</span> len)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 完成这个函数</span></span><br><span class="line">        <span class="keyword">if</span> (len &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> index = len - <span class="number">1</span>; index &gt;= <span class="number">0</span>; index--) &#123;</span><br><span class="line">            <span class="keyword">int</span> temp = array[index];</span><br><span class="line">            <span class="keyword">if</span> (temp == index) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (temp != <span class="number">0</span>) &#123;</span><br><span class="line">                swapWithZero(array, len, temp);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            swapWithZero(array, len, index);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span </summary>
      
    
    
    
    
  </entry>
  
</feed>
